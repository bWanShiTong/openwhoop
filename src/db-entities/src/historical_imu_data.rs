//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "historical_imu_data")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_type = "Float")]
    pub acc_x: f32,
    #[sea_orm(column_type = "Float")]
    pub acc_y: f32,
    #[sea_orm(column_type = "Float")]
    pub acc_z: f32,
    #[sea_orm(column_type = "Float")]
    pub gyr_x: f32,
    #[sea_orm(column_type = "Float")]
    pub gyr_y: f32,
    #[sea_orm(column_type = "Float")]
    pub gyr_z: f32,
    #[sea_orm(unique)]
    pub history_record_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::heart_rate::Entity",
        from = "Column::HistoryRecordId",
        to = "super::heart_rate::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    HeartRate,
}

impl Related<super::heart_rate::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::HeartRate.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}

//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "sleep_cycles")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    #[sea_orm(unique)]
    pub sleep_id: Date,
    pub start: DateTime,
    pub end: DateTime,
    pub min_bpm: i16,
    pub max_bpm: i16,
    pub avg_bpm: i16,
    pub min_hrv: i32,
    pub max_hrv: i32,
    pub avg_hrv: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::activities::Entity")]
    Activities,
}

impl Related<super::activities::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Activities.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
